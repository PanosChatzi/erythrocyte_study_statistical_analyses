---
title: "Data Preparation"
subtitle: "Prepare the data for analysis and figures"
author: "Panagiotis N. Chatzinikolaou"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

# Introduction

In this interactive document, we show step-by-step how we prepared the data in tidy format. We are going to create different dataframes for the demographic, physiological, metabolic and NIRS data, to facilitate easier data handling and analysis, as well as plotting. In addition, we will create two different tidy formats to a) facilitate the creation of figures and b) automate the statistical analysis of multiple datasets.

## Setup

### Packages

```{r}
#| include: false
#| echo: false
# Load required libraries
library(tidyr)
library(dplyr)
```

### Data loading

Read the '.csv' file that contains the experimental data.

```{r}
#| include: false
#| echo: false
all_data_wide <- read.csv2("data/master_database_v6.csv")
```

If we have the data in a RData format, then read the RData file.

```{r}
#| include: false
#| echo: false
# Load the saved Rdata files
load("data/tidyData.RData")
```

## Data wrangle

### Demographics

```{r}
#| include: false
#| echo: false
demographics <- 
  all_data_wide |> 
  select(ID:Platelets_ecc)
```

### Glycolysis flux

Glycolysis flux was calculated by measuring the rate of lactate excretion *ex vivo.*

```{r}
#| include: false
#| echo: false
lactate_dat_tidy <- 
  all_data_wide |> 
  select(ID, lac_con_rest:lac_ecc_post30) |> 
  # pivot data from long to tidy (wide) format
  pivot_longer(cols = !ID,
               cols_vary = "fastest",
               names_to = c(".value", "condition", "timepoint"), 
               names_sep = "_") |> 
  rename(glycolysis_flux = "lac") # add a more meaningful name

# recode the factor variables
lactate_dat_tidy$ID <- factor(lactate_dat_tidy$ID)

lactate_dat_tidy$condition <- 
  factor(lactate_dat_tidy$condition,
         levels = c("con", "ecc"),
         labels = c("Control", "Oxidative stress"))

lactate_dat_tidy$timepoint <- 
  factor(lactate_dat_tidy$timepoint,
         levels = c("rest", "pre", "post0", "post10", "post30"),
         labels = c("Baseline", "Pre-arm", "Post-arm", "Post-10'", "Post-30'"))

# link the custom colours (black and red) with the levels of condition (control, eccentric)
rbc.palette1 <- c("black", "red")

names(rbc.palette1) <- levels(lactate_dat_tidy$condition)
```

### Metabolism

Tidy 1. Data for figures.

```{r}
#| include: false
#| echo: false
metabolic_tidy <- 
  all_data_wide |> 
  select(ID, BPG_con_rest:ckinase_ecc_post) |> 
  pivot_longer(cols = !ID,
               cols_vary = "fastest",
               names_to = c(".value", "condition", "timepoint"), 
               names_sep = "_")

# recode the factor variables
metabolic_tidy$ID <- factor(metabolic_tidy$ID)

metabolic_tidy$condition <- factor(metabolic_tidy$condition,
                                   levels = c("con", "ecc"),
                                   labels = c("Control", "Oxidative stress"))

metabolic_tidy$timepoint <- 
  factor(metabolic_tidy$timepoint,
         levels = c("rest", "pre", "post"),
         labels = c("Baseline", "Pre-arm", "Post-arm"))

# link the custom colours (black and red) with the levels of condition (control, eccentric)
names(rbc.palette1) <- levels(metabolic_tidy$condition)
```

Tidy 2. We transform the data into a long(er)/tidy format, using the **tidyr** package. Glycolytic flux data are already in a tidy format so they do not need any transformations.

```{r}
#| echo: false
metabolic_tidier <- pivot_longer(data = metabolic_tidy,
                                 cols = !c(ID, condition, timepoint),    
                                 cols_vary = "fastest",
                                 values_to = "Measurement",
                                 names_to = "Molecule")  

# A sanity check. We have 20 participants, 17 variables, 2 conditions and 3 timepoints resulting to 20*17*2*3 = 2040 observations in total.
```

### VO2max

```{r}
#| include: false
#| echo: false

# select the gas exchange data and pivot to longer format
vo2_dat_tidy <- 
  all_data_wide |> 
  select(ID, vo2Arm_con:rerLeg_ecc) |> 
  pivot_longer(cols = !ID,
               cols_vary = "fastest",
               names_to = c(".value", "condition"), 
               names_sep = "_")

# recode the factor variables
vo2_dat_tidy$ID <- factor(vo2_dat_tidy$ID)

vo2_dat_tidy$condition <- 
  factor(vo2_dat_tidy$condition,
         levels = c("con", "ecc"),
         labels = c("Control", "Oxidative stress"))

# link the custom colours (black and red) with the levels of condition (control, eccentric)
names(rbc.palette1) <- levels(vo2_dat_tidy$condition)
```

### Isokinenic dynamometry

Tidy 1.

```{r}
#| echo: false
performance_tidy <- 
  all_data_wide |> 
  select(ID, domsLeg_con_rest:eccTorLeg_ecc_48) |> 
  pivot_longer(cols = !ID,
               cols_vary = "fastest",
               names_to = c(".value", "condition", "timepoint"), 
               names_sep = "_")

# recode the factor variables
performance_tidy$ID <- factor(performance_tidy$ID)

performance_tidy$condition <- 
  factor(performance_tidy$condition,
         levels = c("con", "ecc"),
         labels = c("Control", "Oxidative stress"))

performance_tidy$timepoint <- 
  factor(performance_tidy$timepoint,
         levels = c("rest", "48"),
         labels = c("Baseline", "Post-48h"))

# link the custom colours (black and red) with the levels of condition (control, eccentric)
names(rbc.palette1) <- levels(performance_tidy$condition)
```

Tidy 2.

```{r}
#| echo: false
performance_tidier <- pivot_longer(data = performance_tidy,
                                   cols = !c(ID, condition, timepoint),    
                                   cols_vary = "fastest",
                                   values_to = "Measurement",
                                   names_to = "Test")  

# A sanity check. We have 20 participants, 10 variables, 2 conditions and 2 timepoints resulting to 20*10*2*2 = 800 observations in total.
```

### Fragility

```{r}
#| include: false
#| echo: false
fragility_tidy <- 
  all_data_wide |> 
  select(ID, metHb_con_rest:hemolysis_ecc_post) |> 
  pivot_longer(cols = !ID,
               cols_vary = "fastest",
               names_to = c(".value", "condition", "timepoint"), 
               names_sep = "_")

# recode the factor variables
fragility_tidy$ID <- factor(fragility_tidy$ID)

fragility_tidy$condition <- 
  factor(fragility_tidy$condition,
         levels = c("con", "ecc"),
         labels = c("Control", "Oxidative stress"))

fragility_tidy$timepoint <- 
  factor(fragility_tidy$timepoint,
         levels = c("rest", "pre", "post"),
         labels = c("Baseline", "Pre-arm", "Post-arm"))

# link the custom colours (black and red) with the levels of condition (control, eccentric)
names(rbc.palette1) <- levels(fragility_tidy$condition)
```

### NIRS

NIRS during vascular occlusion test (5 min rest, 5 min occlusion, 3 min recovery).

```{r}
#| include: false
#| echo: false
nirs_arms_occl_tidy <- 
  all_data_wide |> 
  select(ID, occl_arms_HHb_con_rest1:occl_arms_tHb_ecc_rest3) |> 
  pivot_longer(cols = !ID,
               cols_vary = "fastest",
               names_to = c("type", "limb", ".value", "condition", "time"), 
               names_sep = "_")

nirs_legs_occ_tidy <- 
  all_data_wide |> 
  select(ID, occl_leg_HHb_con_rest1:occl_leg_tHb_ecc_rec90) |> 
  pivot_longer(cols = !ID,
               cols_vary = "fastest",
               names_to = c("type", "limb", ".value", "condition", "time"), 
               names_sep = "_")

# recode the factor variables
nirs_arms_occl_tidy$condition <- 
  factor(nirs_arms_occl_tidy$condition,
         levels = c("con", "ecc"),
         labels = c("Control", "Oxidative stress"))

nirs_legs_occ_tidy$condition <- 
  factor(nirs_legs_occ_tidy$condition,
         levels = c("con", "ecc"),
         labels = c("Control", "Oxidative stress"))

nirs_arms_occl_tidy$time <- 
  factor(nirs_arms_occl_tidy$time,
         levels = c("rest1", "rest2", "rest3", "occ1",  "occ2",  "occ3",  "occ4",  
                    "occ5",  "rec30", "rec60", "rec90"))

nirs_legs_occ_tidy$time <- 
  factor(nirs_legs_occ_tidy$time,
         levels = c("rest1", "rest2", "rest3", "occ1",  "occ2",  "occ3",  "occ4",  
                    "occ5",  "rec30", "rec60", "rec90"))

# link the custom colours (black and red) with the levels of condition (control, eccentric)
names(rbc.palette1) <- levels(nirs_arms_occl_tidy$condition)
names(rbc.palette1) <- levels(nirs_legs_occ_tidy$condition)
```

Arm muscle oxygenation during exercise.

```{r}
#| include: false
#| echo: false
# Arms nirs signals
nirs_arms_exs_tidy <- 
  all_data_wide |> 
  select(ID, o2hb_arm_con_base:thb_arm_ecc_rec3min) |> 
  pivot_longer(cols = !ID,
               cols_vary = "fastest",
               names_to = c(".value", "limb", "condition", "time"), 
               names_sep = "_")

nirs_arms_exs_tidy <- 
  nirs_arms_exs_tidy |> 
  filter(limb == "arm")

nirs_arms_exs_tidy$condition <- 
  factor(nirs_arms_exs_tidy$condition,
         levels = c("con", "ecc"),
         labels = c("Control", "Oxidative stress"))

nirs_arms_exs_tidy$time <- 
  factor(nirs_arms_exs_tidy$time,
         levels = c("base", "ex10", "ex20", "ex30", "ex40", "ex50", "ex60", "ex70", "ex80",
                    "ex90", "ex100", "rec1min", "rec2min", "rec3min"),
         labels = c("0", "10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "1'", "2'", "3'"))

names(rbc.palette1) <- levels(nirs_arms_exs_tidy$condition)
```

Leg muscle oxygenation during exercise.

```{r}
#| include: false
#| echo: false
# Legs nirs signals
nirs_legs_exs_tidy <- 
  all_data_wide |> 
  select(ID, o2hb_leg_con_base:thb_leg_ecc_rec3min) |> 
  pivot_longer(cols = !ID,
               cols_vary = "fastest",
               names_to = c(".value", "limb", "condition", "time"), 
               names_sep = "_")

nirs_legs_exs_tidy <- 
  nirs_legs_exs_tidy |> 
  filter(limb == "leg")

nirs_legs_exs_tidy$condition <- 
  factor(nirs_legs_exs_tidy$condition,
         levels = c("con", "ecc"),
         labels = c("Control", "Oxidative stress"))

nirs_legs_exs_tidy$time <- 
  factor(nirs_legs_exs_tidy$time,
         levels = c("base", "ex10", "ex20", "ex30", "ex40", "ex50", "ex60", "ex70", "ex80",
                    "ex90", "ex100", "rec1min", "rec2min", "rec3min"),
         labels = c("0", "10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "1'", "2'", "3'"))

# link the custom colours (black and red) with the levels of condition (control, eccentric)
names(rbc.palette1) <- levels(nirs_legs_exs_tidy$condition)
```

### *Ex vivo*

First *ex vivo* experiment, varying hydrogen peroxide concentration.

```{r}
#| include: false
#| echo: false
peroxide_exvivo_tidy <- 
  all_data_wide |> 
  select(ID, perox_lac_con_0:perox_lac_ecc_40) |>
  pivot_longer(cols = !ID,
               cols_vary = "fastest",
               names_to = c(".value", "dummy", "condition", "dose"), 
               names_sep = "_") |> 
  rename(glycolysis_flux = "perox") # add a more meaningful name

# recode the factor variables
peroxide_exvivo_tidy$ID <- factor(peroxide_exvivo_tidy$ID)

peroxide_exvivo_tidy$condition <- 
  factor(peroxide_exvivo_tidy$condition,
         levels = c("con", "ecc"),
         labels = c("Control", "Oxidative stress"))

peroxide_exvivo_tidy$dose <- factor(peroxide_exvivo_tidy$dose,
                                    levels = c(0, 5, 10, 20, 40))

# delete the redundant dummy column
peroxide_exvivo_tidy$dummy <- NULL

# link the custom colours (black and red) with the levels of condition (control, eccentric)
names(rbc.palette1) <- levels(peroxide_exvivo_tidy$condition)
```

Second *ex vivo* experiment, varying glucose concentrations

```{r}
#| include: false
#| echo: false
glucose_exvivo_tidy <- 
  all_data_wide |> 
  select(ID, glc_lac_con_10:glc_lac_ecc_4) |> 
  pivot_longer(cols = !ID,
               cols_vary = "fastest",
               names_to = c(".value", "dummy", "condition", "dose"), 
               names_sep = "_") |> 
  rename(glycolysis_flux = "glc") # add a more meaningful name

# delete the redundant dummy column
glucose_exvivo_tidy$dummy <- NULL

# recode the factor variables
glucose_exvivo_tidy$ID <- factor(glucose_exvivo_tidy$ID)

glucose_exvivo_tidy$condition <- 
  factor(glucose_exvivo_tidy$condition,
         levels = c("con", "ecc"),
         labels = c("Control", "Oxidative stress"))

glucose_exvivo_tidy$dose <- 
  factor(glucose_exvivo_tidy$dose, 
         levels = c("4", "5", "7", "10"),
         labels = c("3.9", "5.6", "7.2", "10"))

# link the custom colours (black and red) with the levels of condition (control, eccentric)
names(rbc.palette1) <- levels(glucose_exvivo_tidy$condition)
```

## Save

```{r}
#| include: false
#| echo: false

# Save my workspace to complete_image.RData in the data folder of the working directory
save.image(file = "data/tidyData.RData")
```
