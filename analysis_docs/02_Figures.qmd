---
title: "Erythrocyte paper figures"
subtitle: "Create the figures for the manuscript"
author: "Panagiotis N. Chatzinikolaou"
date: 2023-10-10
format: html
editor: visual
execute: 
  warning: false
  message: false
editor_options: 
  chunk_output_type: console
---

# Introduction

In this interactive document, we show step-by-step how we created the figures.

## Setup

### Packages

```{r}
#| include: false
#| echo: false
# Load required libraries
#library(cowplot)
#library(gridExtra)

library(patchwork)
library(tidyr)
library(dplyr)
library(ggbeeswarm)
library(ggplot2)
```

### Themes

First, set some default settings.

```{r}
#| include: false
#| echo: false
# create a custom colour palette
rbc.palette1 <- c("black", "red")

# add Segoe UI font family
windowsFonts(`Segoe UI` = windowsFont('Segoe UI'))
```

Second, we create a custom theme for our figures.

```{r}
#| include: false
#| echo: false

theme_rbc3 <- function() {                                                # creating a new theme function
  theme_bw() + # using a predefined theme as a base
    theme(text = element_text(family = "Segoe UI"),
          axis.text.x = element_text(size = 12, colour = "black"), 
          axis.text.y = element_text(size = 12, colour = "black"),
          axis.title = element_text(size = 14),
          axis.line = element_line(color = "black", linewidth = 0.5),
          axis.ticks = element_line(colour = "black"), # Change y axis ticks only
          plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), units = , "cm"),
          plot.title = element_text(size = 20, vjust = 1, hjust = 0.5),
          plot.background = element_blank(),
          legend.position = "none",    # Delete legend
          panel.grid = element_blank(),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),
          panel.border = element_blank())  # to delete the border use: element_blank()
} # element_rect(colour = "black", size = 1, fill = NA)
```

### Data loading

Read the '.csv' file that contains the experimental data.

```{r}
#| include: false
all_data_wide <- read.csv2("data/master_database_v6.csv")
```

If we have the data in a RData format, then read the RData file.

```{r}
# Load the saved Rdata files
load("data/tidyData.RData")
```

If we have already created and saved the plots, we can just load them.

```{r}
# Load the saved plots
load("data/metabolic_plots.RData")
```

## Glycolysis

Here, we will plot the glycolytic data.

**Glycolysis flux (μM/min)**

```{r}
#| include: false
# set custom dodge
bee_width = 0.15
bee_dodge = 0.75
```

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'center', out.width = "70%"}
#| echo: false
(glycoplot <- 
  lactate_dat_tidy |> 
  ggplot(aes(x = timepoint, y = glycolysis_flux, group = condition, colour = condition)) + 
  # add raw data points with the ggbeeswarm::quasirandom function
  ggbeeswarm::geom_quasirandom(dodge.width = bee_dodge, width = bee_width,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = bee_dodge, width = bee_width,
                               size = 2.5, alpha = 0.3) +
  # add lines connecting cell means by condition
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(bee_dodge)) +
  # add 95% CI to cell means
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.10, 
               linewidth = 0.70, position = position_dodge(bee_dodge)) +
  # add data points representing the means across each condition
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1,
               position = position_dodge(bee_dodge), shape = 21, fill = "white") +
  # add custom theme
  theme_rbc3() +
  # add custom labels for 'x' and 'y' axis
  labs(x = "", y = "Glycolytic flux (μM/min)") +
  # change 'x' axis labels
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise",
                            "Post-10'" = "Post-10' exercise",
                            "Post-30'" = "Post-30' exercise")) +
  # add custom colours
  scale_color_manual(values = rbc.palette1))
```

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'center', out.width = "70%"}
#| echo: false
(glycoplot <- glycoplot + 
  coord_cartesian(ylim = c(0, 100)) +
  scale_y_continuous(expand = c(0, 0), breaks = seq(from = 0, to = 100, by = 20)))
```

Now save the plot.

```{r}
#| echo: false
ggsave(plot = glycoplot, filename = "Glycolysis.svg", path = "D:/PhD/Papers/Erythrocyte study/Figures/Glycolysis/", device = "svg", width = 22.31, height = 13.42, units = "cm", dpi = 320)
```

**2,3-bisphosphoglycerate (mM)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'center', out.width = "70%"}
#| echo: false
bpg_plot <- 
  metabolic_tidy |> 
  ggplot(aes(x = timepoint, y = BPG, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = 0.50, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.50, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(0.50)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.08, 
               linewidth = 0.70, position = position_dodge(0.50)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(0.50),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "2,3-Bisphosphoglycerate (mM)") +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)
  # remove tickmarks from 'x' axis
 # ggpubr::rremove("x.ticks")
```

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'center', out.width = "70%"}
#| echo: false
(bpg_plot <- 
  bpg_plot + 
    coord_cartesian(ylim = c(0, 10)) + 
    scale_y_continuous(expand = c(0, 0), breaks = seq(from = 0, to = 10, by = 2)))
```

```{r}
#| echo: false
(hemebinding_panel <- bpg_plot + methemoglobin_plot + plot_annotation(tag_levels = 'A', tag_suffix = '.'))
```

```{r}
#| echo: false
ggsave(plot = hemebinding_panel, filename = "hemebinding_panel.svg", path = "D:/PhD/Papers/Erythrocyte study/Figures/Glycolysis", width = 30, height = 12.25, units = "cm", device = "svg", dpi = 320)
```

**Hexokinase (IU/g Hb)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'center', out.width = "70%"}
#| echo: false
hexokinase_plot <- 
  metabolic_tidy |> 
  ggplot(aes(x = timepoint, y = hexokinase, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.08, 
               linewidth = 0.70, position = position_dodge(0.60)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1,
               position = position_dodge(0.60), shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Hexokinase (U/g Hb)") +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)

(hexokinase_plot <- 
  hexokinase_plot + 
  coord_cartesian(ylim = c(0, 2)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = c(0, 0.4, 0.8, 1.2, 1.6, 2),
                     labels = c("0", "0.4", "0.8", "1.2", "1.6", "2")))
```

**Phosphofructokinase (U/g Hb)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'center', out.width = "70%"}
#| echo: false
phosphofructokinase_plot <- 
  metabolic_tidy |> 
  ggplot(aes(x = timepoint, y = pfk, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.08,
               linewidth = 0.70, position = position_dodge(0.60)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(0.60), shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Phosphofructokinase (U/g Hb)") +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)

(phosphofructokinase_plot <- 
  phosphofructokinase_plot + 
  coord_cartesian(ylim = c(0, 20)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 20, by = 4)))
```

**Glyceraldehyde 3-phosphate dehydrogenase (GAPDH; U/g Hb)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'center', out.width = "70%"}
#| echo: false
gapdh_plot <- 
  metabolic_tidy |> 
  ggplot(aes(x = timepoint, y = gapdh, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70,
               position = position_dodge(0.60)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.08, 
               linewidth = 0.70, position = position_dodge(0.60)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1,
               position = position_dodge(0.60), shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "GAPDH (U/g Hb)") +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)

(gapdh_plot <- 
  gapdh_plot + 
  coord_cartesian(ylim = c(0, 100)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 100, by = 20)))
```

**Glucose-6-phosphate dehydrogenase** **(G6PD; U/g Hb)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'center', out.width = "70%"}
#| echo: false
g6pd_plot <- 
  metabolic_tidy |> 
  ggplot(aes(x = timepoint, y = g6pd, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.08,
               linewidth = 0.70, position = position_dodge(0.60)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(0.60), shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "G6PD (U/g Hb)") +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)

(g6pd_plot <- 
  g6pd_plot + 
  coord_cartesian(ylim = c(0, 35)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 35, by = 5)))
```

Combine Hexokinase, Phosphofructokinase, GAPDH, and G6PD plots.

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
(glycolytic_panel <- 
    ((hexokinase_plot + g6pd_plot)/(phosphofructokinase_plot + gapdh_plot)) + plot_annotation(tag_levels = 'A', tag_suffix = '.')) &
  theme(text = element_text(family = "Segoe UI", size = 14))
```

```{r}
#| echo: false
ggsave(plot = glycolytic_panel, filename = "glycolytic_panel.svg", 
       path = "D:/PhD/Papers/Erythrocyte study/Figures/Glycolysis/", 
       width = 27, height = 18, units = "cm", device = "svg", dpi = 320, scale = 1.2)
```

## Redox

**Glutathione (μmol/g Hb)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'center', out.width = "70%"}
#| echo: false
glutathione_plot <- 
  metabolic_tidy |> 
  ggplot(aes(x = timepoint, y = GSH, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.08,
               linewidth = 0.70, position = position_dodge(0.60)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(0.60), shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Glutathione (μmol/g Hb)") +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)

(glutathione_plot <- 
  glutathione_plot + 
  coord_cartesian(ylim = c(0, 6)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 6, by = 2)))
```

**F2-isoprostanes (pg/mL packed RBC)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'center', out.width = "70%"}
#| echo: false
isoprostanes_plot <- 
  metabolic_tidy |> 
  ggplot(aes(x = timepoint, y = f2iso, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.08,
               linewidth = 0.70, position = position_dodge(0.60)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(0.60),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = expression("F"[2] ~ "-isoprostanes (pg/mL)")) +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)

(isoprostanes_plot <- 
  isoprostanes_plot + 
  coord_cartesian(ylim = c(0, 2500)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 2500, by = 500)))
```

**Protein carbonyls (nmol/mg Hb)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'center', out.width = "70%"}
#| echo: false
carbonyls_plot <- 
  metabolic_tidy |> 
  ggplot(aes(x = timepoint, y = carbonyls, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", 
               width = 0.08, linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(0.60),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Protein carbonyls (nmol/g Hb)") +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)

(carbonyls_plot <- 
  carbonyls_plot + 
  coord_cartesian(ylim = c(0, 6)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 6, by = 2)))
```

Combine glutathione, f2-isoprostanes and protein carbonyls, using **patchwork**.

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false 
(redox_panel_A <- isoprostanes_plot + carbonyls_plot + glutathione_plot + 
    plot_layout(design = "
                1122
                #33#
                ", nrow = 2) + plot_annotation(tag_levels = 'A', tag_suffix = '.'))
```

Using the package **gridExtra**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}

redox_panel_A <- 
  grid.arrange(isoprostanes_plot, carbonyls_plot, nullGrob(), glutathione_plot, nullGrob(), layout_matrix = matrix(c(1,1,2,2,3,4,4,5), byrow = TRUE, ncol = 4))

grid.text("A.", x = 0, y = 1, just = "left", gp = gpar(fontsize = 12, fontface = "bold"))
grid.text("B.", x = 0.485, y = 1, just = "left", gp = gpar(fontsize = 12, fontface = "bold"))
grid.text("C.", x = 0.24, y = 0.5, just = "left", gp = gpar(fontsize = 12, fontface = "bold"))
```

```{r}
#| echo: false 
ggsave(plot = redox_panel_A, filename = "redox_panel_A.svg", path = "D:/PhD/Papers/Erythrocyte study/Figures/Redox/", width = 24, height = 17.85, units = "cm", device = "svg", dpi = 320, scale = 1.2)
```

**Superoxide dismutase (SOD; U/mg Hb)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'center', out.width = "70%"}
#| echo: false
sod_plot <- 
  metabolic_tidy |> 
  ggplot(aes(x = timepoint, y = sod, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", 
               width = 0.08, linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(0.60),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Superoxide dismutase (U/g Hb)") +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)

(sod_plot <- 
  sod_plot + 
  coord_cartesian(ylim = c(0, 4500)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 4500, by = 1500)))
```

**Catalase (U/mg Hb)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'center', out.width = "70%"}
#| echo: false
catalase_plot <- 
  metabolic_tidy |> 
  ggplot(aes(x = timepoint, y = cat, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", 
               width = 0.08, linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(0.60),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Catalase (U/g Hb)") +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)

(catalase_plot <- 
  catalase_plot + 
  coord_cartesian(ylim = c(0, 400)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 400, by = 100)))
```

**Glutathione peroxidase (GPx; U/mg Hb)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'center', out.width = "70%"}
#| echo: false
gshperoxidase_plot <- 
  metabolic_tidy |> 
  ggplot(aes(x = timepoint, y = gpx, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", 
               width = 0.08, linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(0.60),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Glutathione peroxidase (U/g Hb)") +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)

(gshperoxidase_plot <- 
  gshperoxidase_plot + 
  coord_cartesian(ylim = c(0, 80)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 80, by = 20)))
```

**Glutathione reductase (GR; U/mg Hb)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
gshreductase_plot <- 
  metabolic_tidy |> 
  ggplot(aes(x = timepoint, y = gshreductase, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", 
               width = 0.08, linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(0.60),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Glutathione reductase (U/g Hb)") +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)

(gshreductase_plot <- 
  gshreductase_plot + 
  coord_cartesian(ylim = c(0, 20)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 20, by = 5)))
```

```{r}
#| echo: false
ggsave(plot = gshreductase_plot, filename = "gshreductase_plot.svg", 
       path = "D:/PhD/Papers/Erythrocyte study/Figures/Redox", 
       width = 20, height = 12.25, units = "cm", device = "svg", dpi = 320)
```

Combine SOD, catalase, GPx and GR

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false 

(redox_panel_B <- (sod_plot + catalase_plot)/(gshperoxidase_plot + gshreductase_plot) + plot_annotation(tag_levels = 'A', tag_suffix = '.'))
```

```{r}
#| echo: false 
ggsave(plot = redox_panel_B, filename = "redox_panel_B.svg", path = "D:/PhD/Papers/Erythrocyte study/Figures/Redox/", width = 27, height = 18, units = "cm", device = "svg", dpi = 320, scale = 1.2)
```

**Vitamin C (μM)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
ascorbate_plot <- 
  metabolic_tidy |> 
  ggplot(aes(x = timepoint, y = vitC, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.08, linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(0.60),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Vitamin C (μM)") +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)

(ascorbate_plot <- 
  ascorbate_plot + 
  coord_cartesian(ylim = c(0, 100)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 100, by = 20)))
```

```{r}
#| echo: false
ggsave(plot = ascorbate_plot, filename = "ascorbate_plot.svg", 
       path = "D:/PhD/Papers/Erythrocyte study/Figures/Redox", 
       width = 20, height = 12.25, units = "cm", device = "svg", dpi = 320)
```

**Vitamin E (μM)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
tocopherol_plot <- 
  metabolic_tidy |> 
  ggplot(aes(x = timepoint, y = vitE, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", 
               width = 0.08, linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(0.60),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Vitamin E (μM)") +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)

(tocopherol_plot <- 
  tocopherol_plot + 
  coord_cartesian(ylim = c(0, 9)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 9, by = 3)))
```

```{r}
#| echo: false
ggsave(plot = tocopherol_plot, filename = "tocopherol_plot.svg", 
       path = "D:/PhD/Papers/Erythrocyte study/Figures/Redox", 
       width = 20, height = 12.25, units = "cm", device = "svg", dpi = 320)
```

**NADH (nmol/g Hb)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
nadh_plot <- 
  metabolic_tidy |> 
  ggplot(aes(x = timepoint, y = nadh, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", 
               width = 0.08, linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(0.60),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "NADH (nmol/g Hb)") +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)

(nadh_plot <- 
  nadh_plot + 
  coord_cartesian(ylim = c(0, 450)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 450, by = 150)))
```

**NADPH (nmol/g Hb)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
nadph_plot <- 
  metabolic_tidy |> 
  ggplot(aes(x = timepoint, y = nadph, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, position = position_dodge(0.60)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", 
               width = 0.08, linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(0.60),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "NADPH (nmol/g Hb)") +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)

(nadph_plot <- 
  nadph_plot + 
  coord_cartesian(ylim = c(0, 450)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 450, by = 150)))
```

Combine Vitamin C, Vit E, NADH and NADPH.

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
(redox_panel_C <- (ascorbate_plot + tocopherol_plot)/(nadh_plot + nadph_plot) + 
    plot_annotation(tag_levels = 'A', tag_suffix = '.'))
```

```{r}
#| echo: false
ggsave(plot = redox_panel_C, filename = "redox_panel_C.svg", 
       path = "D:/PhD/Papers/Erythrocyte study/Figures/Redox/", 
       width = 27, height = 18, units = "cm", device = "svg", dpi = 320, scale = 1.2)
```

## Fragility

**Methemoglobin (g/dL)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
methemoglobin_plot <- 
  fragility_tidy |> 
  ggplot(aes(x = timepoint, y = metHb, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", 
               width = 0.08, linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(0.60),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Methemoglobin (g/dL)") +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)

(methemoglobin_plot <- 
  methemoglobin_plot + 
  coord_cartesian(ylim = c(0, 1)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 1, by = 0.2),
                     labels = c("0", "0.2", "0.4", "0.6", "0.8", "1")))
```

**Hemolysis (Plasma Hb; g/L)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
hemolysis_plot <- 
  fragility_tidy |> 
  ggplot(aes(x = timepoint, y = hemolysis, group = condition, colour = condition)) + ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar",
               width = 0.08, linewidth = 0.70, position = position_dodge(0.60)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(0.60),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Plasma hemoglobin (g/L)") +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)

(hemolysis_plot <- 
  hemolysis_plot + 
  coord_cartesian(ylim = c(0, 0.1)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 0.1, by = 0.02),
                     labels = c("0", "0.02", "0.04", "0.06", "0.08", "0.1")))
```

**Creatine kinase (U/L)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
creatine_plot <- 
  metabolic_tidy |> 
  ggplot(aes(x = timepoint, y = ckinase, group = condition, colour = condition)) +   ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = 0.60, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", 
               width = 0.08, linewidth = 0.70, 
               position = position_dodge(0.60)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(0.60), shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Creatine kinase (U/L)") +
  scale_x_discrete(labels=c("Baseline" = "Baseline", 
                            "Pre-arm" = "Pre-exercise",
                            "Post-arm" = "Post-exercise")) +
  scale_color_manual(values = rbc.palette1)

(creatine_plot <- 
  creatine_plot + 
  coord_cartesian(ylim = c(0, 6000)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 6000, by = 1500)))
```

Combine the methemoglobin and hemolysis plots.

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
(fragility_panel <- hemolysis_plot + creatine_plot + plot_annotation(tag_levels = 'A', tag_suffix = '.'))
```

```{r}
#| echo: false
fragility_panel <- gridExtra::grid.arrange(methemoglobin_plot, hemolysis_plot, grid::nullGrob(), creatine_plot, grid::nullGrob(), layout_matrix = matrix(c(1,1,2,2,3,4,4,5), byrow = TRUE, ncol = 4))
```

```{r}
#| echo: false
ggsave(plot = fragility_panel, filename = "fragility_panel.svg", 
       path = "D:/PhD/Papers/Erythrocyte study/Figures/Fragility", 
       width = 30, height = 12.25, units = "cm", device = "svg", dpi = 320)
```

## VO2max

Peak oxygen uptake \[VO2max; (ml/min/kg)\] in the arm and leg ergometer tests.

**Arms**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
vo2_arm_plot <- 
  vo2_dat_tidy |> 
  ggplot(aes(x = condition, y = vo2Arm, group = 1, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(width = 0.06, dodge.width = NULL,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(width = 0.06, dodge.width = NULL,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70,
               colour = "black") + # add a separate colour
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.04,
               linewidth = 0.70, colour = "black") +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1,
               shape = 21, fill = "white", colour = "black") +
  theme_rbc3() +
  labs(x = "", y = expression("Arms VO"[2]~"peak (ml/min/kg)")) +
  scale_color_manual(values = rbc.palette1)

(vo2_arm_plot <- 
  vo2_arm_plot + 
  coord_cartesian(ylim = c(0, 60)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 60, by = 10)))
```

**Legs**

Plot the legs VO2peak data.

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
vo2_leg_plot <- 
  vo2_dat_tidy |> 
  ggplot(aes(x = condition, y = vo2Leg, group = 1, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(width = 0.06, dodge.width = NULL,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(width = 0.06, dodge.width = NULL,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70,
               colour = "black") +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.04,
               linewidth = 0.70, colour = "black") +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1,
               shape = 21, fill = "white", colour = "black") +
  theme_rbc3() +
  labs(x = "", y = expression("Legs VO"[2]~"peak (ml/min/kg)")) +
  scale_color_manual(values = rbc.palette1)

(vo2_leg_plot <- 
  vo2_leg_plot + 
  coord_cartesian(ylim = c(0, 60)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 60, by = 10)))
```

Combine the VO2 plots

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
(vo2_panel <- vo2_arm_plot + vo2_leg_plot + plot_annotation(tag_levels = 'A', tag_suffix = '.'))
```

```{r}
#| echo: false
ggsave(plot = vo2_panel, filename = "vo2_panel.svg", 
       path = "D:/PhD/Papers/Erythrocyte study/Figures/Physiology/", 
       width = 26.43, height = 11.09, units = "cm", device = "svg", dpi = 320)
```

## Isokinetic dynamometry

```{r}
#| include: false
#| echo: false
iso_dodge <- 0.45
```

### Arm torque

Isometric peak torque (Nm)

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
arm_iso_plot <- 
  performance_tidy |> 
  ggplot(aes(x = timepoint, y = isoTorArm, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(iso_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", 
               width = 0.08, linewidth = 0.70, 
               position = position_dodge(iso_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(iso_dodge),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Arm isometric torque (Nm)") +
  scale_x_discrete(labels = c("Baseline" = "Baseline",
                              "Post-48h" = "Pre-exercise")) +
  scale_color_manual(values = rbc.palette1)

(arm_iso_plot <- 
  arm_iso_plot + 
  coord_cartesian(ylim = c(0, 120)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 120, by = 30)))
```

Concentric peak torque (Nm)

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
arm_con_plot <- 
  performance_tidy |> 
  ggplot(aes(x = timepoint, y = conTorArm, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(iso_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", 
               width = 0.08, linewidth = 0.70, 
               position = position_dodge(iso_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(iso_dodge),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Arm concentric torque (Nm)") +
  scale_x_discrete(labels = c("Baseline" = "Baseline",
                              "Post-48h" = "Pre-exercise")) +
  scale_color_manual(values = rbc.palette1)

(arm_con_plot <- 
  arm_con_plot + 
  coord_cartesian(ylim = c(0, 120)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 120, by = 30)))
```

Eccentric peak torque (Nm)

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
arm_ecc_plot <- 
  performance_tidy |> 
  ggplot(aes(x = timepoint, y = eccTorArm, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(iso_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", 
               width = 0.08, linewidth = 0.70, 
               position = position_dodge(iso_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(iso_dodge),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Arm eccentric torque (Nm)") +
  scale_x_discrete(labels = c("Baseline" = "Baseline",
                              "Post-48h" = "Pre-exercise")) +
  scale_color_manual(values = rbc.palette1)

(arm_ecc_plot <- 
  arm_ecc_plot + 
  coord_cartesian(ylim = c(0, 120)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 120, by = 30)))
```

### Legs torque

Isometric peak torque (Nm)

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
leg_iso_plot <- 
  performance_tidy |> 
  ggplot(aes(x = timepoint, y = isoTorLeg, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(iso_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.08,
               linewidth = 0.70, position = position_dodge(iso_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(iso_dodge),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Leg isometric torque (Nm)") +
  scale_x_discrete(labels = c("Baseline" = "Baseline",
                              "Post-48h" = "Pre-exercise")) +
  scale_color_manual(values = rbc.palette1)

(leg_iso_plot <- 
  leg_iso_plot + 
  coord_cartesian(ylim = c(0, 250)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 250, by = 50)))
```

Concentric peak torque (Nm)

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
leg_con_plot <- 
  performance_tidy |> 
  ggplot(aes(x = timepoint, y = conTorLeg, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70,
               position = position_dodge(iso_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.08, 
               linewidth = 0.70, position = position_dodge(iso_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(iso_dodge),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Leg concentric torque (Nm)") +
  scale_x_discrete(labels = c("Baseline" = "Baseline",
                              "Post-48h" = "Pre-exercise")) +
  scale_color_manual(values = rbc.palette1)

(leg_con_plot <- 
  leg_con_plot + 
  coord_cartesian(ylim = c(0, 250)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 250, by = 50)))
```

Eccentric peak torque (Nm)

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'right', out.width = "70%"}
#| echo: false
leg_ecc_plot <- 
  performance_tidy |> 
  ggplot(aes(x = timepoint, y = eccTorLeg, group = condition, colour = condition)) + ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(iso_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", 
               width = 0.08, linewidth = 0.70, 
               position = position_dodge(iso_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(iso_dodge),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Leg eccentric torque (Nm)") +
  scale_x_discrete(labels = c("Baseline" = "Baseline",
                              "Post-48h" = "Pre-exercise")) +
  scale_color_manual(values = rbc.palette1)

(leg_ecc_plot <- 
  leg_ecc_plot + 
  coord_cartesian(ylim = c(0, 250)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 250, by = 50)))
```

Combine the isometric, concentric and peak torque.

```{r}
#| echo: false
torque_panel <- (arm_iso_plot + arm_con_plot + arm_ecc_plot) / (leg_iso_plot + leg_con_plot + leg_ecc_plot) 

torque_panel[[1]] <- torque_panel[[1]] + plot_layout(tag_level = "new")
torque_panel[[2]] <- torque_panel[[2]] + plot_layout(tag_level = "new")

torque_panel <- torque_panel + 
  plot_annotation(tag_levels = c('A', "1"), 
                  tag_suffix = '.', tag_sep = '.')
```

```{r}
#| echo: false
ggsave(plot = torque_panel, filename = "torques_panel.svg", 
       path = "D:/PhD/Papers/Erythrocyte study/Figures/Physiology/", 
       width = 34, height = 15, units = "cm", device = "svg", dpi = 320, 
       scale = 1.3)
```

## Muscle damage

**ROM leg**

```{r}
#| echo: false
rom_leg_plot <- 
  performance_tidy |> 
  ggplot(aes(x = timepoint, y = romLeg, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, position = position_dodge(iso_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.08,
               linewidth = 0.70, position = position_dodge(iso_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(iso_dodge),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Leg ROM (degrees)") +
  scale_x_discrete(labels = c("Baseline" = "Baseline",
                              "Post-48h" = "Pre-exercise")) +
  scale_color_manual(values = rbc.palette1)

(rom_leg_plot <- 
  rom_leg_plot + 
  coord_cartesian(ylim = c(80, 160)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 80, to = 160, by = 20)))
```

**ROM arm**

```{r}
#| echo: false
rom_arm_plot <- 
  performance_tidy |> 
  ggplot(aes(x = timepoint, y = romArm, group = condition, colour = condition)) + 
  # add raw data points with the ggbeeswarm::quasirandom function
  ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", 
               linewidth = 0.70, position = position_dodge(iso_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.08,
               linewidth = 0.70, position = position_dodge(iso_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(iso_dodge),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Arm ROM (degrees)") +
  scale_x_discrete(labels = c("Baseline" = "Baseline",
                              "Post-48h" = "Pre-exercise")) +
  scale_color_manual(values = rbc.palette1)

(rom_arm_plot <- 
  rom_arm_plot + 
  coord_cartesian(ylim = c(80, 160)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 80, to = 160, by = 20)))
```

**DOMS leg**

```{r}
#| echo: false
doms_leg_plot <- 
  performance_tidy |> 
  ggplot(aes(x = timepoint, y = domsLeg, group = condition, colour = condition)) +   ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(iso_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", 
               width = 0.08, linewidth = 0.70, 
               position = position_dodge(iso_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(iso_dodge),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Leg DOMS (1-10)") +
  scale_x_discrete(labels = c("Baseline" = "Baseline",
                              "Post-48h" = "Pre-exercise")) +
  scale_color_manual(values = rbc.palette1)

(doms_leg_plot <- 
  doms_leg_plot + 
  coord_cartesian(ylim = c(0, 10)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 10, by = 2)))
```

**DOMS arm**

```{r}
#| echo: false
doms_arm_plot <- 
  performance_tidy |> 
  ggplot(aes(x = timepoint, y = domsArm, group = condition, colour = condition)) +   ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = iso_dodge, width = 0.10,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position =      position_dodge(iso_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.08, 
               linewidth = 0.70, position = position_dodge(iso_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(iso_dodge),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Arm DOMS (1-10)") +
  scale_x_discrete(labels = c("Baseline" = "Baseline",
                              "Post-48h" = "Pre-exercise")) +
  scale_color_manual(values = rbc.palette1)

(doms_arm_plot <- 
  doms_arm_plot + 
  coord_cartesian(ylim = c(0, 10)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 10, by = 2)))
```

Create the muscle damage panel

```{r}
damage_panel <- (rom_leg_plot + rom_arm_plot) / (doms_leg_plot + doms_arm_plot) 

damage_panel[[1]] <- damage_panel[[1]] + plot_layout(tag_level = "new")
damage_panel[[2]] <- damage_panel[[2]] + plot_layout(tag_level = "new")

damage_panel <- damage_panel + 
  plot_annotation(tag_levels = c('A', "1"), 
                  tag_suffix = '.', tag_sep = '.')
```

```{r}
#| echo: false
ggsave(plot = damage_panel, filename = "damage_panel.svg", 
       path = "D:/PhD/Papers/Erythrocyte study/Figures/Physiology/", 
       width = 26, height = 18, units = "cm", device = "svg", dpi = 320, scale = 1.2)
```

## NIRS exercise

Muscle oxygenation was measured via near-infrared spectroscopy in both arm and leg muscles during exercise and occlusion.

```{r}
#| include: false
nirs_width = 0.15
nirs_dodge = 0.80
```

**Arm oxygenated hemoglobin (μM)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'center', out.width = "70%"}
#| include: false
arm_oxy_plot <- 
  nirs_arms_exs_tidy |> 
  filter(limb == "arm") |>  
  ggplot(aes(x = time, y = o2hb, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, shape = 1, alpha = 0.80) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, alpha = 0.30) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.50, position = position_dodge(nirs_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.18, linewidth = 0.60, position = position_dodge(nirs_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3, position = position_dodge(nirs_dodge), shape = 21, stroke = 0.80, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = expression("Arm O"[2] ~ "Hb (a.u.)")) +
  scale_color_manual(values = rbc.palette1)

(arm_oxy_plot <- 
  arm_oxy_plot +
  coord_cartesian(ylim = c(-30, 10)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = -30, to = 10, by = 10)) +
  scale_x_discrete(labels = c("Rest", "10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%", "1'", "2'", "3'")))
```

**Arm deoxygenated hemoglobin (μM)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'center', out.width = "70%"}
#| echo: false
arm_deoxy_plot <- 
  nirs_arms_exs_tidy |> 
  filter(limb == "arm") |>  
  ggplot(aes(x = time, y = hhb, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, shape = 1, alpha = 0.80) +
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, alpha = 0.30) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.50, position = position_dodge(nirs_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.18, linewidth = 0.60, position = position_dodge(nirs_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3, position = position_dodge(nirs_dodge), shape = 21, stroke = 0.80, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Arm HHb (a.u.)") +
  scale_color_manual(values = rbc.palette1)

(arm_deoxy_plot <- 
  arm_deoxy_plot +
  coord_cartesian(ylim = c(-10, 40)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = -10, to = 40, by = 10)) +
  scale_x_discrete(labels = c("Rest", "10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%", "1'", "2'", "3'")))
```

**Arm total hemoglobin (μM)**

```{r}
#| echo: false
arm_total_plot <- 
  nirs_arms_exs_tidy |> 
  filter(limb == "arm") |>  
  ggplot(aes(x = time, y = thb, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, shape = 1, alpha = 0.80) +
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, alpha = 0.30) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.50, position = position_dodge(nirs_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.18, linewidth = 0.60, position = position_dodge(nirs_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3, position = position_dodge(nirs_dodge), shape = 21, stroke = 0.80, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Arm tHb (a.u.)") +
  scale_color_manual(values = rbc.palette1)

(arm_total_plot <- 
  arm_total_plot +
  coord_cartesian(ylim = c(-15, 20)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = -15, to = 20, by = 5)) +
  scale_x_discrete(labels = c("Rest", "10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%", "1'", "2'", "3'")))
```

**Leg oxygenated hemoglobin (μM)**

```{r}
#| echo: false
leg_oxy_plot <- 
  nirs_legs_exs_tidy |> 
  filter(limb == "leg") |>  
  ggplot(aes(x = time, y = o2hb, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, shape = 1, alpha = 0.80) +
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, alpha = 0.30) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.50, position = position_dodge(nirs_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.18, linewidth = 0.60, position = position_dodge(nirs_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3, position = position_dodge(nirs_dodge), shape = 21, stroke = 0.80, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = expression("Leg O"[2] ~ "Hb (a.u.)")) +
  scale_color_manual(values = rbc.palette1)

(leg_oxy_plot <- 
  leg_oxy_plot +
  coord_cartesian(ylim = c(-20, 10)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = -20, to = 10, by = 5)) +
  scale_x_discrete(labels = c("Rest", "10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%", "1'", "2'", "3'")))
```

**Leg deoxygenated hemoglobin**

```{r}
#| echo: false
leg_deoxy_plot <- 
  nirs_legs_exs_tidy |> 
  filter(limb == "leg") |>  
  ggplot(aes(x = time, y = hhb, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, shape = 1, alpha = 0.80) +
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, alpha = 0.30) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.50, position = position_dodge(nirs_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.18, linewidth = 0.60, position = position_dodge(nirs_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3, position = position_dodge(nirs_dodge), shape = 21, stroke = 0.80, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Leg HHb (a.u.)") +
  scale_color_manual(values = rbc.palette1)

(leg_deoxy_plot <- 
  leg_deoxy_plot +
  coord_cartesian(ylim = c(-10, 30)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = -10, to = 30, by = 10)) +
  scale_x_discrete(labels = c("Rest", "10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%", "1'", "2'", "3'")))
```

**Leg total hemoglobin (μM)**

```{r}
#| echo: false
leg_total_plot <- 
  nirs_legs_exs_tidy |> 
  filter(limb == "leg") |>  
  ggplot(aes(x = time, y = thb, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, shape = 1, alpha = 0.80) +
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, alpha = 0.30) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.50, position = position_dodge(nirs_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.18, linewidth = 0.60, position = position_dodge(nirs_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3, position = position_dodge(nirs_dodge), shape = 21, stroke = 0.80, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "Leg tHb (a.u.)") +
  scale_color_manual(values = rbc.palette1)

(leg_total_plot <- 
  leg_total_plot +
  coord_cartesian(ylim = c(-15, 15)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = -15, to = 15, by = 5)) +
  scale_x_discrete(labels = c("Rest", "10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%", "1'", "2'", "3'")))
```

```{r}
#| echo: false
(arm_nirs_ex <- arm_oxy_plot / arm_deoxy_plot / arm_total_plot +
    plot_annotation(tag_levels = 'A', tag_suffix = '.'))
```

```{r}
#| echo: false
(leg_nirs_ex <- leg_oxy_plot / leg_deoxy_plot / leg_total_plot +
    plot_annotation(tag_levels = 'A', tag_suffix = '.'))
```

```{r}
#| echo: false
ggsave(plot = arm_nirs_ex, filename = "arm_nirs_ex.svg", 
       path = "D:/PhD/Papers/Erythrocyte study/Figures/NIRS/", 
       width = 10, height = 15, units = "in", device = "svg", dpi = 320)
```

```{r}
#| echo: false
ggsave(plot = leg_nirs_ex, filename = "leg_nirs_ex.svg", 
       path = "D:/PhD/Papers/Erythrocyte study/Figures/NIRS/", 
       width = 10, height = 15, units = "in", device = "svg", dpi = 320)
```

## NIRS occlusion

```{r}
load(file = "data/nirs_arms_occl_tidy.RData")
```

**Arm oxygenated hemoglobin (μM)**

```{r}
#| include: false
arm_oxy_bfr <- 
  nirs_arms_occl_tidy |> 
  filter(limb == "arms") |>  
  ggplot(aes(x = time, y = O2Hb, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, shape = 1, alpha = 0.80) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, alpha = 0.30) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.50, position = position_dodge(nirs_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.18, linewidth = 0.60, position = position_dodge(nirs_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3, position = position_dodge(nirs_dodge), shape = 21, stroke = 0.80, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = expression("Arm O"[2] ~ "Hb (a.u.)")) +
  scale_color_manual(values = rbc.palette1)

(arm_oxy_bfr <- 
  arm_oxy_bfr +
  coord_cartesian(ylim = c(-50, 20)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = -50, to = 20, by = 10)) +
  scale_x_discrete(labels = c("60", "120", "180", "240", "300", "360", "420", "480", "510", "540", "570")))
```

**Arm deoxygenated hemoglobin**

```{r}
#| include: false
arm_deooxy_bfr <- 
  nirs_arms_occl_tidy |> 
  filter(limb == "arms") |>  
  ggplot(aes(x = time, y = HHb, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, shape = 1, alpha = 0.80) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, alpha = 0.30) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.50, position = position_dodge(nirs_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.18, linewidth = 0.60, position = position_dodge(nirs_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3, position = position_dodge(nirs_dodge), shape = 21, stroke = 0.80, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = expression("Arm HHb (a.u.)")) +
  scale_color_manual(values = rbc.palette1)

(arm_deooxy_bfr <- 
  arm_deooxy_bfr +
  coord_cartesian(ylim = c(-10, 50)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = -10, to = 50, by = 10)) +
  scale_x_discrete(labels = c("60", "120", "180", "240", "300", "360", "420", "480", "510", "540", "570")))
```

**Arm total hemoglobin**

```{r}
#| include: false
arm_total_bfr <- 
  nirs_arms_occl_tidy |> 
  filter(limb == "arms") |>  
  ggplot(aes(x = time, y = tHb, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, shape = 1, alpha = 0.80) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, alpha = 0.30) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.50, position = position_dodge(nirs_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.18, linewidth = 0.60, position = position_dodge(nirs_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3, position = position_dodge(nirs_dodge), shape = 21, stroke = 0.80, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = expression("Arm tHb (a.u.)")) +
  scale_color_manual(values = rbc.palette1)

(arm_total_bfr <- 
  arm_total_bfr +
  coord_cartesian(ylim = c(-30, 30)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = -30, to = 30, by = 10)) +
  scale_x_discrete(labels = c("60", "120", "180", "240", "300", "360", "420", "480", "510", "540", "570")))
```

**Leg oxygenated hemoglobin (μM)**

```{r}
#| include: false
leg_oxy_bfr <- 
  nirs_legs_occ_tidy |> 
  filter(limb == "leg") |>  
  ggplot(aes(x = time, y = O2Hb, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, shape = 1, alpha = 0.80) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, alpha = 0.30) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.50, position = position_dodge(nirs_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.18, linewidth = 0.60, position = position_dodge(nirs_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3, position = position_dodge(nirs_dodge), shape = 21, stroke = 0.80, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = expression("Leg O"[2] ~ "Hb (a.u.)")) +
  scale_color_manual(values = rbc.palette1)

(leg_oxy_bfr <- 
  leg_oxy_bfr +
  coord_cartesian(ylim = c(-40, 20)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = -40, to = 20, by = 10)) +
  scale_x_discrete(labels = c("60", "120", "180", "240", "300", "360", "420", "480", "510", "540", "570")))
```

**Leg deoxygenated hemoglobin**

```{r}
#| include: false
leg_deoxy_bfr <- 
  nirs_legs_occ_tidy |> 
  filter(limb == "leg") |>  
  ggplot(aes(x = time, y = HHb, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, shape = 1, alpha = 0.80) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, alpha = 0.30) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.50, position = position_dodge(nirs_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.18, linewidth = 0.60, position = position_dodge(nirs_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3, position = position_dodge(nirs_dodge), shape = 21, stroke = 0.80, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = expression("Leg HHb (a.u.)")) +
  scale_color_manual(values = rbc.palette1)

(leg_deoxy_bfr <- 
  leg_deoxy_bfr +
  coord_cartesian(ylim = c(-10, 40)) + 
  scale_y_continuous(expand = c(0, 0),
                     breaks = seq(from = -10, to = 40, by = 10)) +
  scale_x_discrete(labels = c("60", "120", "180", "240", "300", "360", "420", "480", "510", "540", "570")))
```

**Leg total hemoglobin**

```{r}
#| include: false
leg_total_bfr <- 
  nirs_legs_occ_tidy |> 
  filter(limb == "leg") |>  
  ggplot(aes(x = time, y = tHb, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, shape = 1, alpha = 0.80) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = nirs_dodge, width = nirs_width,
                               size = 2, alpha = 0.30) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.50, position = position_dodge(nirs_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.18, linewidth = 0.60, position = position_dodge(nirs_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3, position = position_dodge(nirs_dodge), shape = 21, stroke = 0.80, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = expression("Leg tHb (a.u.)")) +
  scale_color_manual(values = rbc.palette1)

(leg_total_bfr <- 
  leg_total_bfr +
  coord_cartesian(ylim = c(-25, 25)) + 
  scale_y_continuous(expand = c(0, 0),
                     breaks = seq(from = -25, to = 25, by = 10)) +
  scale_x_discrete(labels = c("60", "120", "180", "240", "300", "360", "420", "480", "510", "540", "570")))
```

**Combine and save the plots**

```{r}
#| echo: false
(arm_nirs_bfr <- arm_oxy_bfr / arm_deooxy_bfr / arm_total_bfr +
    plot_annotation(tag_levels = 'A', tag_suffix = '.'))
```

```{r}
#| echo: false
(leg_nirs_bfr <- leg_oxy_bfr / leg_deoxy_bfr / leg_total_bfr +
    plot_annotation(tag_levels = 'A', tag_suffix = '.'))
```

```{r}
#| echo: false
ggsave(plot = arm_nirs_bfr, filename = "arm_nirs_bfr.svg", 
       path = "D:/PhD/Papers/Erythrocyte study/Figures/NIRS/", 
       width = 10, height = 15, units = "in", device = "svg", dpi = 320)
```

```{r}
#| echo: false
ggsave(plot = leg_nirs_bfr, filename = "leg_nirs_bfr.svg", 
       path = "D:/PhD/Papers/Erythrocyte study/Figures/NIRS/", 
       width = 10, height = 15, units = "in", device = "svg", dpi = 320)
```

## Ex vivo

```{r}
#| include: false
# set custom dodge
bee_width = 0.15
bee_dodge = 0.80
```

**Hydrogen peroxide (nM)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'center', out.width = "70%"}
#| echo: false

peroxide_exvivo_tidy$dose <- factor(peroxide_exvivo_tidy$dose,
                                    levels = c(0, 5, 10, 20, 40))
peroxide_plot <- 
  peroxide_exvivo_tidy |> 
  ggplot(aes(x = dose, y = glycolysis_flux, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = bee_dodge, width = bee_width,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = bee_dodge, width = bee_width,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(bee_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.10, 
               linewidth = 0.70, position = position_dodge(bee_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(bee_dodge),
               shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "Hydrogen peroxide (μM)", y = "Glycolytic flux (μM/min)") +
  scale_color_manual(values = rbc.palette1)

(peroxide_plot <- 
  peroxide_plot + 
  coord_cartesian(ylim = c(0, 120)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 120, by = 20)))
```

**Glucose (mg/dL)**

```{r fig.asp= 0.618, fig.width= 8, fig.align = 'center', out.width = "70%"}
#| echo: false
glucose_plot <- 
  glucose_exvivo_tidy |> 
  ggplot(aes(x = dose, y = glycolysis_flux, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = bee_dodge, width = bee_width,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = bee_dodge, width = bee_width,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(bee_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.10, 
               linewidth = 0.70, position = position_dodge(bee_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
               position = position_dodge(bee_dodge), shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "Glucose (mM)", y = "Glycolytic flux (μM/min)") +
  scale_color_manual(values = rbc.palette1)

(glucose_plot <- 
  glucose_plot + 
  coord_cartesian(ylim = c(0, 120)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 0, to = 120, by = 20)))
```

```{r}
#| echo: false
(ex_vivo_panel <- glucose_plot + peroxide_plot +
    plot_annotation(tag_levels = 'A', tag_suffix = '.'))
```

```{r}
ggsave(plot = ex_vivo_panel, filename = "ex_vivo_panel.svg", 
       path = "D:/PhD/Papers/Erythrocyte study/Figures/Ex_vivo/", 
       width = 15, height = 5.68, units = "in", device = "svg", dpi = 320)
```

Save all plots.

```{r}
#| echo: false
directory <- ls() # or objects
all_plots <- directory[grep(pattern = "_plot", x = directory)]
```

```{r}
saveRDS(object = all_plots, file = "data/metabolic_plots.RData")
```

## pH

```{r}
#| echo: false
pH_dat <- readr::read_csv2("data/p50_data.csv")
```

```{r}
#| echo: false
pH_dat2 <- pH_dat[, 11:ncol(pH_dat)]

pH_dat2$ID <- 1:nrow(pH_dat2)

pH_dat2 <- pH_dat2[,c(7, 1:6)]
pH_dat2
```

```{r}
#| echo: false
pH_tidy_dat <- 
  pH_dat2 |> 
  tidyr::pivot_longer(cols = -ID,
                      cols_vary = "fastest",
                      names_to = c(".value", "condition", "timepoint"), 
                      names_sep = "_")
pH_tidy_dat
```

Recode the factors

```{r}
pH_tidy_dat$condition <- 
  factor(pH_tidy_dat$condition,
         levels = c("con", "exp"),
         labels = c("Control", "Experimental"))

pH_tidy_dat$timepoint <- 
  factor(pH_tidy_dat$timepoint,
         levels = c("rest", "pre", "post"),
         labels = c("Baseline", "Pre-exercise", "Post-exercise"))
```

Creating the plot

```{r}
#| include: false
# set custom dodge
bee_width = 0.15
bee_dodge = 0.75
```

```{r}
#| echo: false
pH_plot <- 
  pH_tidy_dat |> 
  ggplot(aes(x = timepoint, y = pH, group = condition, colour = condition)) + 
  ggbeeswarm::geom_quasirandom(dodge.width = bee_dodge, width = bee_width,
                               size = 2.5, shape = 1) + #stroke = 0.70
  ggbeeswarm::geom_quasirandom(dodge.width = bee_dodge, width = bee_width,
                               size = 2.5, alpha = 0.3) +
  stat_summary(fun = "mean", geom = "line", linewidth = 0.70, 
               position = position_dodge(bee_dodge)) +
  stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.10, 
               linewidth = 0.70, position = position_dodge(bee_dodge)) +
  stat_summary(fun = "mean", geom = "point", size = 3.2, stroke = 1, 
     
          position = position_dodge(bee_dodge), shape = 21, fill = "white") +
  theme_rbc3() +
  labs(x = "", y = "pH") +
  scale_color_manual(values = rbc.palette1)

(pH_plot <- 
  pH_plot + 
  coord_cartesian(ylim = c(6.8, 7.8)) + 
  scale_y_continuous(expand = c(0, 0), 
                     breaks = seq(from = 6.8, to = 7.8, by = 0.2)))
```

```{r}
#| echo: false
ggsave(plot = pH_plot, filename = "pH_plot.svg", path = "D:/PhD/Papers/Erythrocyte study/Figures/Other/", device = "svg", width = 22.31, height = 13.42, units = "cm", dpi = 320)
```

**Congratulations, you made it to the end!**
